--
-- UPDATE syntax tests
--
CREATE TABLE update_test (
    a   INT DEFAULT 10,
    b   INT,
    c   TEXT
);
INSERT INTO update_test VALUES (5, 10, 'foo');
INSERT INTO update_test VALUES (15, 10, 'test1');
INSERT INTO update_test VALUES(105, 107, 'test2');
INSERT INTO update_test VALUES(112, 93, 'test3');
INSERT INTO update_test VALUES(84, 97, 'test4');
SELECT * FROM update_test;
  a  |  b  |   c   
-----+-----+-------
   5 |  10 | foo
  15 |  10 | test1
 105 | 107 | test2
 112 |  93 | test3
  84 |  97 | test4
(5 rows)

-- Check SET(*) case
UPDATE update_test SET(*) = (SELECT * FROM update_test WHERE b = 107)  WHERE b=10;
SELECT a,b, char_length(c) FROM update_test;
  a  |  b  | char_length 
-----+-----+-------------
 105 | 107 |           5
 112 |  93 |           5
  84 |  97 |           5
 105 | 107 |           5
 105 | 107 |           5
(5 rows)

UPDATE update_test SET a = DEFAULT, b = DEFAULT;
SELECT * FROM update_test;
 a  | b |   c   
----+---+-------
 10 |   | test2
 10 |   | test3
 10 |   | test4
 10 |   | test2
 10 |   | test2
(5 rows)

-- aliases for the UPDATE target table
UPDATE update_test AS t SET b = 10 WHERE t.a = 10;
SELECT * FROM update_test;
 a  | b  |   c   
----+----+-------
 10 | 10 | test2
 10 | 10 | test3
 10 | 10 | test4
 10 | 10 | test2
 10 | 10 | test2
(5 rows)

INSERT INTO update_test(b, a) VALUES(112,93);
UPDATE update_test t SET b = t.b + 10 WHERE t.a = 10;
SELECT * FROM update_test;
 a  |  b  |   c   
----+-----+-------
 93 | 112 | 
 10 |  20 | test2
 10 |  20 | test3
 10 |  20 | test4
 10 |  20 | test2
 10 |  20 | test2
(6 rows)

--
-- Test VALUES in FROM
--
UPDATE update_test SET a=v.i FROM (VALUES(100, 20)) AS v(i, j)
  WHERE update_test.b = v.j;
SELECT * FROM update_test;
  a  |  b  |   c   
-----+-----+-------
  93 | 112 | 
 100 |  20 | test2
 100 |  20 | test3
 100 |  20 | test4
 100 |  20 | test2
 100 |  20 | test2
(6 rows)

--
-- Test multiple-set-clause syntax
--
INSERT INTO update_test SELECT a,b+1,c FROM update_test;
SELECT * FROM update_test;
  a  |  b  |   c   
-----+-----+-------
  93 | 112 | 
 100 |  20 | test2
 100 |  20 | test3
 100 |  20 | test4
 100 |  20 | test2
 100 |  20 | test2
  93 | 113 | 
 100 |  21 | test2
 100 |  21 | test3
 100 |  21 | test4
 100 |  21 | test2
 100 |  21 | test2
(12 rows)

UPDATE update_test SET (c,b,a) = ('bugle', b+11, DEFAULT) WHERE c = 'foo';
SELECT * FROM update_test;
  a  |  b  |   c   
-----+-----+-------
  93 | 112 | 
 100 |  20 | test2
 100 |  20 | test3
 100 |  20 | test4
 100 |  20 | test2
 100 |  20 | test2
  93 | 113 | 
 100 |  21 | test2
 100 |  21 | test3
 100 |  21 | test4
 100 |  21 | test2
 100 |  21 | test2
(12 rows)

UPDATE update_test SET (c,b) = ('car', a+b), a = a + 1 WHERE a = 10;
SELECT * FROM update_test;
  a  |  b  |   c   
-----+-----+-------
  93 | 112 | 
 100 |  20 | test2
 100 |  20 | test3
 100 |  20 | test4
 100 |  20 | test2
 100 |  20 | test2
  93 | 113 | 
 100 |  21 | test2
 100 |  21 | test3
 100 |  21 | test4
 100 |  21 | test2
 100 |  21 | test2
(12 rows)

-- fail, multi assignment to same column:
UPDATE update_test SET (c,b) = ('car', a+b), b = a + 1 WHERE a = 10;
ERROR:  multiple assignments to same column "b"
-- uncorrelated sub-select:
UPDATE update_test
  SET (b,a) = (select a,b from update_test where b = 41 and c = 'car')
  WHERE a = 100 AND b = 20;
SELECT * FROM update_test;
  a  |  b  |   c   
-----+-----+-------
  93 | 112 | 
  93 | 113 | 
 100 |  21 | test2
 100 |  21 | test3
 100 |  21 | test4
 100 |  21 | test2
 100 |  21 | test2
     |     | test2
     |     | test3
     |     | test4
     |     | test2
     |     | test2
(12 rows)

-- correlated sub-select:
UPDATE update_test o
  SET (b,a) = (select a+1,b from update_test i
               where i.a=o.a and i.b=o.b and i.c is not distinct from o.c);
ERROR:  more than one row returned by a subquery used as an expression
SELECT * FROM update_test;
  a  |  b  |   c   
-----+-----+-------
  93 | 112 | 
  93 | 113 | 
 100 |  21 | test2
 100 |  21 | test3
 100 |  21 | test4
 100 |  21 | test2
 100 |  21 | test2
     |     | test2
     |     | test3
     |     | test4
     |     | test2
     |     | test2
(12 rows)

-- fail, multiple rows supplied:
UPDATE update_test SET (b,a) = (select a+1,b from update_test);
ERROR:  more than one row returned by a subquery used as an expression
-- set to null if no rows supplied:
UPDATE update_test SET (b,a) = (select a+1,b from update_test where a = 1000)
  WHERE a = 11;
SELECT * FROM update_test;
  a  |  b  |   c   
-----+-----+-------
  93 | 112 | 
  93 | 113 | 
 100 |  21 | test2
 100 |  21 | test3
 100 |  21 | test4
 100 |  21 | test2
 100 |  21 | test2
     |     | test2
     |     | test3
     |     | test4
     |     | test2
     |     | test2
(12 rows)

-- if an alias for the target table is specified, don't allow references
-- to the original table name
UPDATE update_test AS t SET b = update_test.b + 10 WHERE t.a = 10;
ERROR:  invalid reference to FROM-clause entry for table "update_test"
LINE 1: UPDATE update_test AS t SET b = update_test.b + 10 WHERE t.a...
                                        ^
HINT:  Perhaps you meant to reference the table alias "t".
-- Make sure that we can update to a TOASTed value.
UPDATE update_test SET c = repeat('x', 10000) WHERE c = 'car';
SELECT a, b, char_length(c) FROM update_test;
  a  |  b  | char_length 
-----+-----+-------------
  93 | 112 |            
  93 | 113 |            
 100 |  21 |           5
 100 |  21 |           5
 100 |  21 |           5
 100 |  21 |           5
 100 |  21 |           5
     |     |           5
     |     |           5
     |     |           5
     |     |           5
     |     |           5
(12 rows)

DROP TABLE update_test;
